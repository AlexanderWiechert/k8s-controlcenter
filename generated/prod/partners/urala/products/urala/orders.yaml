apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: uralabps
  labels:
    partner: UwesRadladen
    product: uralabps
spec:
  selector:
    app: orders
  ports:
  - name: orders-port
    targetPort: 8080
    protocol: TCP
    port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpl-orders
  namespace: uralabps
  labels:
    partner: UwesRadladen
    product: uralabps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        partner: UwesRadladen
        product: uralabps
      annotations:
        a8r.io/description: Deployment of service 'orders'
        a8r.io/owner: '@me'
        composedServiceConfig: |
          runtimeEnvironment=kubernetes
          db.url=jdbc:postgresql://host:port/urala-db
          db.username=URALA
          db.password=my-not-really-secret-secret
          maximumAmountPerOrder=249.9
          someOtherProp=someValue
    spec:
      containers:
      - name: cnt-orders
        env:
        - name: CONFIG_FILE_PATH
          value: /app/config/config.properties
        image: http://myregistry.net/services/orders:2.3.5
        imagePullPolicy: Always
        resources:
          requests:
            memory: 128M
          limits:
            memory: 128M
        volumeMounts:
        - name: vlm-config
          mountPath: /app/config
      volumes:
      - name: vlm-config
        downwardAPI:
          items:
          - path: config.properties
            fieldRef:
              fieldPath: metadata.annotations['composedServiceConfig']
      - name: urandom
        hostPath:
          path: /dev/urandom
          type: File
